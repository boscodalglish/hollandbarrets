name: Terraform CI/CD Pipeline v4

on:
  pull_request:
    types: [ closed, opened, edited, reopened, synchronize ]
    branches: [develop]


env:
  TF_VERSION: "1.3.0"
  TF_VAR_region: "eu-west-1"

jobs:
  terraform-beta:
    runs-on: ubuntu-latest
    environment: dev
    if: github.event_name == 'pull_request' || github.event_name == 'push'
    defaults:
      run:
        shell: bash
        working-directory: ./beta-env
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Terraform fmt
        run: terraform fmt -check -recursive

      - name: Terraform init
        run: terraform init -backend-config="access_key=${{ secrets.AWS_ACCESS_KEY_ID }}" -backend-config="secret_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}"
        env:
          TF_VAR_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          TF_VAR_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          TF_VAR_region: ${{ env.TF_VAR_region }}

      - name: Terraform validate
        run: terraform validate

      - name: Terraform plan
        run: terraform plan -out=tfplan
        env:
          TF_VAR_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          TF_VAR_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          TF_VAR_region: ${{ env.TF_VAR_region }}

      - name: Terraform apply
        if: github.ref == 'refs/heads/develop' && github.event_name == 'push'
        run: terraform apply tfplan
        env:
          TF_VAR_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          TF_VAR_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          TF_VAR_region: ${{ env.TF_VAR_region }}
 
